name: Deploy Azure Data Factory to Multiple Environments

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy to (dev, staging, production)"
        required: true
        type: choice
        options:
          - dev
          - staging
          - production
      resource_name:
        description: "Name of the Azure Data Factory"
        required: true
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Azure Login
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Step 3: Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      # Step 4: Set Environment Variables
      - name: Set Environment-Specific Variables
        id: set_env_vars
        run: |
          if [[ "${{ github.event.inputs.environment }}" == "dev" ]]; then
            echo "RESOURCE_GROUP=dev-resource-group" >> $GITHUB_ENV
            echo "LOCATION=East US" >> $GITHUB_ENV
          elif [[ "${{ github.event.inputs.environment }}" == "staging" ]]; then
            echo "RESOURCE_GROUP=stg-resource-group" >> $GITHUB_ENV
            echo "LOCATION=West US" >> $GITHUB_ENV
          elif [[ "${{ github.event.inputs.environment }}" == "production" ]]; then
            echo "RESOURCE_GROUP=prod-resource-group" >> $GITHUB_ENV
            echo "LOCATION=Central US" >> $GITHUB_ENV
          else
            echo "Invalid environment selected!" >&2
            exit 1
          fi

      # Step 5: Initialize Terraform
      - name: Terraform Init
        run: terraform init

      # Step 6: Terraform Plan
      - name: Terraform Plan
        run: |
          terraform plan \
            -var "adf_name=${{ github.event.inputs.resource_name }}" \
            -var "resource_group_name=${{ env.RESOURCE_GROUP }}" \
            -var "location=${{ env.LOCATION }}"

      # Step 7: Terraform Apply
      - name: Terraform Apply
        run: |
          terraform apply -auto-approve \
            -var "adf_name=${{ github.event.inputs.resource_name }}" \
            -var "resource_group_name=${{ env.RESOURCE_GROUP }}" \
            -var "location=${{ env.LOCATION }}"
